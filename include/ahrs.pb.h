/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_AHRS_AHRS_PB_H_INCLUDED
#define PB_AHRS_AHRS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _AHRS_SensorMeasurement {
    pb_size_t meas_count;
    float meas[3];
    pb_size_t bias_count;
    float bias[3];
} AHRS_SensorMeasurement;

typedef struct _AHRS_IMUMeasurement {
    bool has_accel;
    AHRS_SensorMeasurement accel;
    bool has_gyro;
    AHRS_SensorMeasurement gyro;
    bool has_mag;
    AHRS_SensorMeasurement mag;
    bool has_temp;
    AHRS_SensorMeasurement temp;
} AHRS_IMUMeasurement;


/* Initializer values for message structs */
#define AHRS_SensorMeasurement_init_default      {0, {0, 0, 0}, 0, {0, 0, 0}}
#define AHRS_IMUMeasurement_init_default         {false, AHRS_SensorMeasurement_init_default, false, AHRS_SensorMeasurement_init_default, false, AHRS_SensorMeasurement_init_default, false, AHRS_SensorMeasurement_init_default}
#define AHRS_SensorMeasurement_init_zero         {0, {0, 0, 0}, 0, {0, 0, 0}}
#define AHRS_IMUMeasurement_init_zero            {false, AHRS_SensorMeasurement_init_zero, false, AHRS_SensorMeasurement_init_zero, false, AHRS_SensorMeasurement_init_zero, false, AHRS_SensorMeasurement_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define AHRS_SensorMeasurement_meas_tag          1
#define AHRS_SensorMeasurement_bias_tag          2
#define AHRS_IMUMeasurement_accel_tag            1
#define AHRS_IMUMeasurement_gyro_tag             2
#define AHRS_IMUMeasurement_mag_tag              3
#define AHRS_IMUMeasurement_temp_tag             4

/* Struct field encoding specification for nanopb */
#define AHRS_SensorMeasurement_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, FLOAT,    meas,              1) \
X(a, STATIC,   REPEATED, FLOAT,    bias,              2)
#define AHRS_SensorMeasurement_CALLBACK NULL
#define AHRS_SensorMeasurement_DEFAULT NULL

#define AHRS_IMUMeasurement_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  accel,             1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  gyro,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  mag,               3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  temp,              4)
#define AHRS_IMUMeasurement_CALLBACK NULL
#define AHRS_IMUMeasurement_DEFAULT NULL
#define AHRS_IMUMeasurement_accel_MSGTYPE AHRS_SensorMeasurement
#define AHRS_IMUMeasurement_gyro_MSGTYPE AHRS_SensorMeasurement
#define AHRS_IMUMeasurement_mag_MSGTYPE AHRS_SensorMeasurement
#define AHRS_IMUMeasurement_temp_MSGTYPE AHRS_SensorMeasurement

extern const pb_msgdesc_t AHRS_SensorMeasurement_msg;
extern const pb_msgdesc_t AHRS_IMUMeasurement_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define AHRS_SensorMeasurement_fields &AHRS_SensorMeasurement_msg
#define AHRS_IMUMeasurement_fields &AHRS_IMUMeasurement_msg

/* Maximum encoded size of messages (where known) */
#define AHRS_SensorMeasurement_size              30
#define AHRS_IMUMeasurement_size                 128

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
